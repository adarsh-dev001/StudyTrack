{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "dynamicRoutes": [
    {
      "page": "/blog/[slug]",
      "regex": "^/blog/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPslug": "nxtPslug"
      },
      "namedRegex": "^/blog/(?<nxtPslug>[^/]+?)(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/ai-recommendations",
      "regex": "^/ai\\-recommendations(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/ai\\-recommendations(?:/)?$"
    },
    {
      "page": "/ai-tools",
      "regex": "^/ai\\-tools(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/ai\\-tools(?:/)?$"
    },
    {
      "page": "/ai-tools/material-summarizer",
      "regex": "^/ai\\-tools/material\\-summarizer(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/ai\\-tools/material\\-summarizer(?:/)?$"
    },
    {
      "page": "/ai-tools/productivity-analyzer",
      "regex": "^/ai\\-tools/productivity\\-analyzer(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/ai\\-tools/productivity\\-analyzer(?:/)?$"
    },
    {
      "page": "/ai-tools/smart-quiz",
      "regex": "^/ai\\-tools/smart\\-quiz(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/ai\\-tools/smart\\-quiz(?:/)?$"
    },
    {
      "page": "/ai-tools/syllabus-suggester",
      "regex": "^/ai\\-tools/syllabus\\-suggester(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/ai\\-tools/syllabus\\-suggester(?:/)?$"
    },
    {
      "page": "/analytics",
      "regex": "^/analytics(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/analytics(?:/)?$"
    },
    {
      "page": "/blog",
      "regex": "^/blog(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/blog(?:/)?$"
    },
    {
      "page": "/dashboard",
      "regex": "^/dashboard(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard(?:/)?$"
    },
    {
      "page": "/favicon.ico",
      "regex": "^/favicon\\.ico(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/favicon\\.ico(?:/)?$"
    },
    {
      "page": "/login",
      "regex": "^/login(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/login(?:/)?$"
    },
    {
      "page": "/onboarding",
      "regex": "^/onboarding(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/onboarding(?:/)?$"
    },
    {
      "page": "/pomodoro",
      "regex": "^/pomodoro(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/pomodoro(?:/)?$"
    },
    {
      "page": "/privacy",
      "regex": "^/privacy(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/privacy(?:/)?$"
    },
    {
      "page": "/rewards-shop",
      "regex": "^/rewards\\-shop(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/rewards\\-shop(?:/)?$"
    },
    {
      "page": "/settings",
      "regex": "^/settings(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/settings(?:/)?$"
    },
    {
      "page": "/signup",
      "regex": "^/signup(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/signup(?:/)?$"
    },
    {
      "page": "/streaks",
      "regex": "^/streaks(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/streaks(?:/)?$"
    },
    {
      "page": "/study-planner",
      "regex": "^/study\\-planner(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/study\\-planner(?:/)?$"
    },
    {
      "page": "/tasks",
      "regex": "^/tasks(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/tasks(?:/)?$"
    },
    {
      "page": "/terms",
      "regex": "^/terms(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/terms(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "Next-Router-Segment-Prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  },
  "rewrites": []
}